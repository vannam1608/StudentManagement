name: 🚀 Build-Test-Deploy .NET + Angular

on:
  push:
    branches: [ "main", "dev" ]
  pull_request:
    branches: [ "main", "dev" ]

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    steps:
    # 1. Checkout source code
    - name: 📥 Checkout source
      uses: actions/checkout@v3

    # 2. Setup .NET SDK 8
    - name: 🧰 Setup .NET 8 SDK
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x'

    # 3. Setup Node.js 18 for Angular
    - name: 🧰 Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'

    # 4. Restore and Build Backend (.NET)
    - name: 📦 Restore backend dependencies
      run: dotnet restore StudentManagementAPI/StudentManagementAPI/StudentManagementAPI.csproj

    - name: 🛠️ Build backend
      run: dotnet build StudentManagementAPI/StudentManagementAPI/StudentManagementAPI.csproj --no-restore --configuration Release

    # 5. Run backend tests (optional)
    - name: ✅ Test backend (ignore failures)
      run: dotnet test StudentManagementAPI/StudentManagementAPI/StudentManagementAPI.csproj --no-build --verbosity normal
      continue-on-error: true

    # 6. Publish backend output
    - name: 📦 Publish backend
      run: dotnet publish StudentManagementAPI/StudentManagementAPI/StudentManagementAPI.csproj -c Release -o ./publish/backend

   # 7. Install Angular frontend dependencies
- name: 📦 Install frontend dependencies
  working-directory: ./student-management-Angular
  run: |
    npm install --legacy-peer-deps

# 8. Build Angular frontend (Production)
- name: 🛠️ Build frontend
  working-directory: ./student-management-Angular
  run: |
    npm run build --configuration production

# 9. Upload frontend artifact
- name: 📤 Upload frontend artifact
  uses: actions/upload-artifact@v4
  with:
    name: frontend-dist
    path: ./student-management-Angular/dist

